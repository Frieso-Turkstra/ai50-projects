sort1 uses: Bubble sort

How do you know?:
sort1 is slow on the "reversed" lists which is the worst case scenario for bubble sort but it is quick on "sorted" lists.
Ω(n)
O(n*n)

sort2 uses: Merge sort

How do you know?:
sort2 sorts the "random" text files the fastest and merge sort has the lowest time complexity.
θ(n * log n)

sort3 uses: Selection sort

How do you know?:
sort3 sorts the "sorted" text files the slowest and selection sort has the highest time complexity in the best case-scenario (=sorted).
θ(n*n)
